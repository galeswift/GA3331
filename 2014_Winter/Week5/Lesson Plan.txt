Review	Compiling an executable for unity	SVN Tutorial	First person view	Breakable objects	Platform color changes	itween objects	Implementing jumping	Time limit as gui text	Lba work exercise 	Make a trigger that opens a door when you touch it.	Use triggers, character controllers, and iTweenButton that triggers a Chest that opens + plays animation	Make two states - Open and closed (start closed)	Make two events - Open/cose	Add gui buttons for open/close	Add Play animation	Play and show what happens	Add transition state "Opening"	Hook up to closed state	Now create a new "closing" stateLab work exercise		Now make it so this triggers when you touch it		Implementing a loss condition	Game that involves clicking before time runs outManagers	Global variables		Global variables are accessible from any script		Show how to make varibles global			Drop down menu			Or button on variables screen		Make two global variables			Current player health (as int)			Current player health (as string)		Create health manager Game object		Create a setup state		Create set int value action to initialize player health		Create a GUIText object to show player health on screen		Create a convert int to string action		Add action to set the GUIText to the health string				Create listener state on health manager	Create health pickup object		Add game object (health cross)		Make the object rotate		Add a trigger to the health object		Add a setup state to the trigger FSM				Now we need to notify the health manager.			Could use - "Find Game Object" action		Could also just point to the health manager directly		Instead, we'll register the health manager into a global variable				Use the "Get Owner" action				Add a global variable for health manager (as game object) - Called health manager global				Assign this variable to the get owner action				Now let's add a transition for the Health manager.			Create event called "Add Health"			Add this event to the health manager listener				Now we are going to send an event to the health manager.			Use the "Send Event" action			Event target is "GameObjectFSM"			FSM name is FSM			the event to send will need to be made global.			Go to the "Add Health" event on the health manager and make it global						Set the trigger event to call update health						Add a destroy Object action	Let's actually add the health now		Add a new state to the health manager "Add Health"		Add an "int Add" action, add 25 to the current player health.			We have to update teh GUI Label again.  		Instead of duplicating the action, describe how to share states now		Move the Convert + Set GUI Text actions into their own state		Hook up the events correctly now		Lab work - Remove health based on touching a platform	Platform that removes health	Basically the opposite of the health pickup					Now we need to limit the health before we add it.		Use the "Int Compare" actoin		Add a "Do Nothing" event		If you're already at 100 or higher, do nothing.		Next we need to check health that lets you know when you've died		After subtracting health, update teh GUI			Am I dead state to let you know when you died		Do nothing event		Kill_player event			Destroys the playerUsing mouse pick to change the location of an objectPhysics Pop	Add cube	Add physics component(physics -> Rigid Body	Explain physics material	Single object	Add force action	iTween Rotate Add	Multiple cubes	Random	Pop-up manager		Random Float action		Wait action		Get Random Object actionLab work - Make the physics objects pop when you press a keyUsing mouse pick for the physics popShowing how to spawn objects when you click on a spotExplain what ludum dares are, and how prototypes are going to workHomework - Game involving healing.For next week	 Key tracking and opening a locked door	Projectiles and enemies